/* 
    dBeaver mySQL scripts for BeSpoked Bikes
*/

CREATE DATABASE BeSpokedDB;
USE BeSpokedDB;

/***********************************************************************/

CREATE TABLE SalesEmployees (
  empid INT NOT NULL AUTO_INCREMENT,
  Fname VARCHAR(65) NOT NULL,
  Lname VARCHAR(65) NOT NULL,
  address VARCHAR(100) NOT NULL,
  phone VARCHAR(25),
  StartDate DATE,
  TerminationDate DATE,
  Manager VARCHAR(65) NOT NULL,
  PRIMARY KEY (empid)
);

/***********************************************************************/

CREATE TABLE Products (
  prodid INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(65) NOT NULL,
  manufacturer VARCHAR(65) NOT NULL,
  prodStyle VARCHAR(65) NOT NULL,
  purchasePrice DECIMAL(7,2),
  salePrice DECIMAL(7,2),
  QtyOnHand INT,
  commissionPercentage DECIMAL(5,2) DEFAULT 5.00,
  PRIMARY KEY (prodid)
);

/***********************************************************************/ 

CREATE TABLE Customers (
  custid INT NOT NULL AUTO_INCREMENT,
  Fname VARCHAR(65) NOT NULL,
  Lname VARCHAR(65) NOT NULL,
  address VARCHAR(100) NOT NULL,
  phone VARCHAR(25),
  StartDate DATE,
  PRIMARY KEY (custid)
);

/***********************************************************************/ 

CREATE TABLE Sales (
  saleid INT NOT NULL AUTO_INCREMENT,
  prodid INT NOT NULL,
  empid INT NOT NULL,
  custid INT NOT NULL,
  saleDate DATE,
  salePrice DECIMAL(7,2),
  discountApplied DECIMAL(7,2) DEFAULT 0.00,
  finalPrice DECIMAL(7,2),
  PRIMARY KEY (saleid),
  FOREIGN KEY (prodid) REFERENCES Products(prodid),
  FOREIGN KEY (empid) REFERENCES SalesEmployees(empid),
  FOREIGN KEY (custid) REFERENCES Customers(custid)
);

/***********************************************************************/ 

CREATE TABLE Discounts (
  discid INT NOT NULL AUTO_INCREMENT,
  prodid INT NOT NULL,
  beginDate DATE,
  endDate DATE,
  discountPercentage DECIMAL(5,2),
  PRIMARY KEY (discid),
  FOREIGN KEY (prodid) REFERENCES Products(prodid)
);

/***********************************************************************/ 

CREATE TABLE QuarterlyBonuses (
  bonusid INT NOT NULL AUTO_INCREMENT,
  empid INT NOT NULL,
  year INT NOT NULL,
  quarter INT NOT NULL,
  totalSales DECIMAL(10,2),
  bonusAmount DECIMAL(7,2),
  PRIMARY KEY (bonusid),
  FOREIGN KEY (empid) REFERENCES SalesEmployees(empid)
);


/***********************************************************************/
/***********************************************************************/
/***********************************************************************/ 

/* 
    to fix oversight of the commissionPercentage in the Products table
*/

USE BeSpokedDB;

ALTER TABLE Products
MODIFY COLUMN commissionPercentage DECIMAL(7,2);

UPDATE Products
SET commissionPercentage = salePrice * 0.05;

/***********************************************************************/
/***********************************************************************/
/***********************************************************************/ 

/* 
    ADDING DELIMITERS
*/

USE BeSpokedDB;

DELIMITER //
CREATE TRIGGER before_prod_insert
BEFORE INSERT ON Products
FOR EACH ROW
BEGIN
	SET NEW.commissionPercentage = NEW.salePrice * 0.05;
END//

DELIMITER ;


/*
Delimiter for QuarterlyBonuses Table
*/

USE BeSpokedDB;

DELIMITER //

CREATE TRIGGER after_sale_insert
AFTER INSERT ON Sales
FOR EACH ROW
BEGIN
	DECLARE quarter_num INT;
	DECLARE year_num INT;
	DECLARE total_sales DECIMAL(10,2);
	DECLARE bonus_amount DECIMAL(7,2);

	SET quarter_num = QUARTER(NEW.saleDate);
	SET year_num = YEAR(NEW.saleDate);

	SELECT COALESCE(SUM(finalPrice), 0)
	INTO total_sales
		FROM Sales
		WHERE empid = NEW.empid
		AND YEAR(saleDate) = year_num
		AND QUARTER(saleDate) = quarter_num;
	SET bonus_amount = total_sales * 0.25;

	INSERT INTO QuarterlyBonuses (empid, year, quarter, totalSales, bonusAmount)
	VALUES (NEW.empid, year_num, quarter_num, total_sales, bonus_amount)
	ON DUPLICATE KEY UPDATE
		totalSales = total_sales,
		bonusAmount = bonus_amount;
END //

DELIMITER ;

USE BeSpokedDB;
ALTER TABLE QuarterlyBonuses
ADD UNIQUE KEY unique_bonus (empid, year, quarter);
